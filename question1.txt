/************************************UDP SERVER**********************************/
/********************************************************************************/

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;

class Server {
    public static void main(String[] args) throws IOException {
        DatagramSocket ds = new DatagramSocket(8080);
        byte[] receive = new byte[65535];
        DatagramPacket DpReceive = null;
        String reverse = "";
        DpReceive = new DatagramPacket(receive, receive.length);
        ds.receive(DpReceive);
        StringBuilder str1 = new StringBuilder();
        str1 = data(receive);
        String str = str1.toString();
        for (int i = str.length() - 1; i >= 0; i--) {
            reverse = reverse + str.charAt(i);
        }
        StringBuffer ans = new StringBuffer(reverse);
        for (int i = 0; i < reverse.length(); i++) {
            Character c = reverse.charAt(i);
            if (Character.isLowerCase(c))
                ans.replace(i, i + 1, Character.toUpperCase(c) + "");
            else
                ans.replace(i, i + 1, Character.toLowerCase(c) + "");
        }
        reverse = ans.toString();
        DatagramSocket ds1 = new DatagramSocket();
        InetAddress ip = InetAddress.getLocalHost();
        byte buf[] = null;
        buf = reverse.getBytes();
        DatagramPacket DpSend = new DatagramPacket(buf, buf.length, ip, 2356);
        ds1.send(DpSend);
        receive = new byte[65535];
    }

    public static StringBuilder data(byte[] a) {
        if (a == null)
            return null;
        StringBuilder ret = new StringBuilder();
        int i = 0;
        while (a[i] != 0) {
            ret.append((char) a[i]);
            i++;
        }
        return ret;
    }
}


/************************************UDP CLIENT**********************************/
/********************************************************************************/

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.Scanner;

class Client {
    public static void main(String args[]) throws IOException {
        DatagramSocket ds = new DatagramSocket();
        InetAddress ip = InetAddress.getLocalHost();
        byte buf[] = null;
        Scanner sc = new Scanner(System.in);
        String str = sc.nextLine();
        buf = str.getBytes();
        DatagramPacket DpSend = new DatagramPacket(buf, buf.length, ip, 8080);
        ds.send(DpSend);
        DatagramSocket ds1 = new DatagramSocket(2356);
        byte[] receive = new byte[65535];
        DatagramPacket DpR = new DatagramPacket(receive, receive.length);
        ds1.receive(DpR);
        System.out.println("Server :- " + data(receive));
    }

    public static StringBuilder data(byte[] a) {
        if (a == null)
            return null;
        StringBuilder ret = new StringBuilder();
        int i = 0;
        while (a[i] != 0) {
            ret.append((char) a[i]);
            i++;
        }
        return ret;
    }
}


/************************************TCP SERVER**********************************/
/********************************************************************************/

import java.net.*;
import java.io.*;
import java.util.*;

class Server {
    public static void main(String[] args) {
        try {
            ServerSocket ss = new ServerSocket(3000);
            Socket s = ss.accept();
            StringBuffer reverse = new StringBuffer();
            DataInputStream dis = new DataInputStream(s.getInputStream());
            StringBuffer str = new StringBuffer(dis.readUTF());
            System.out.println("Client :- " + str);
            DataOutputStream dos = new DataOutputStream(s.getOutputStream());
            reverse = str.reverse();
            StringBuffer ans = new StringBuffer(reverse);
            for (int i = 0; i < reverse.length(); i++) {
                Character c = reverse.charAt(i);
                if (Character.isLowerCase(c))
                    ans.replace(i, i + 1, Character.toUpperCase(c) + "");
                else
                    ans.replace(i, i + 1, Character.toLowerCase(c) + "");
            }
            String r = ans.toString();
            dos.writeUTF(r);
            // s.close();
        } catch (IOException e) {
            System.out.println("Exception!!");
        }
    }
}




/************************************TCP CLIENT**********************************/
/********************************************************************************/

import java.net.*;
import java.io.*;
import java.util.*;

class Client {
    public static void main(String[] args) {
        try {
            Socket socket = new Socket("localhost", 3000);
            System.out.println("start");
            System.out.println("waiting for the server...");
            DataInputStream dis = new DataInputStream(socket.getInputStream());
            DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
            System.out.println("Enter your message :- ");
            Scanner sl = new Scanner(System.in);
            String mes = sl.nextLine();
            dos.writeUTF(mes);
            String s = dis.readUTF();
            System.out.println("Server :- " + s);
            socket.close();
        } catch (IOException e) {
            System.out.println("Exception!!");
        }
    }
}

